# coding: utf-8

"""
    EPIC API

    REST API for interacting with EPIC (https://epic.zenotech.com) services. <br />                             Used by the EPIC CLI (https://github.com/zenotech/epic-cli).                             Please note this API is in BETA and does not yet contain                             all EPIC functionality.  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@zenotech.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import epiccore
from epiccore.models.limits import Limits  # noqa: E501
from epiccore.rest import ApiException

class TestLimits(unittest.TestCase):
    """Limits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Limits
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = epiccore.models.limits.Limits()  # noqa: E501
        if include_optional :
            return Limits(
                limits = [
                    epiccore.models.limit.Limit(
                        team = epiccore.models.team.Team(
                            id = 56, 
                            name = '0', 
                            number_of_members = 56, 
                            root_folder = 56, 
                            user_role = '0', ), 
                        budget = epiccore.models.budget.Budget(
                            monthly_limit = '0', ), 
                        project = epiccore.models.project.Project(
                            pk = 56, 
                            project_id = '0', 
                            description = '0', 
                            closed = True, ), 
                        jobauth = epiccore.models.job_auth.JobAuth(
                            enabled = True, 
                            all_jobs = True, 
                            cost_threshold = '0', 
                            description_str = '0', ), 
                        id = -1, )
                    ], 
                max_limit = '0', 
                max_limit_str = '0', 
                total = '0', 
                total_str = '0'
            )
        else :
            return Limits(
                limits = [
                    epiccore.models.limit.Limit(
                        team = epiccore.models.team.Team(
                            id = 56, 
                            name = '0', 
                            number_of_members = 56, 
                            root_folder = 56, 
                            user_role = '0', ), 
                        budget = epiccore.models.budget.Budget(
                            monthly_limit = '0', ), 
                        project = epiccore.models.project.Project(
                            pk = 56, 
                            project_id = '0', 
                            description = '0', 
                            closed = True, ), 
                        jobauth = epiccore.models.job_auth.JobAuth(
                            enabled = True, 
                            all_jobs = True, 
                            cost_threshold = '0', 
                            description_str = '0', ), 
                        id = -1, )
                    ],
        )

    def testLimits(self):
        """Test Limits"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
