# coding: utf-8

"""
    EPIC API

    REST API for interacting with EPIC (https://epic.zenotech.com) services. <br />                             Used by the EPIC CLI (https://github.com/zenotech/epic-cli).                             Please note this API is in BETA and does not yet contain                             all EPIC functionality.  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@zenotech.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import epic_api
from epic_api.models.job_auth_status import JobAuthStatus  # noqa: E501
from epic_api.rest import ApiException

class TestJobAuthStatus(unittest.TestCase):
    """JobAuthStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobAuthStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = epic_api.models.job_auth_status.JobAuthStatus()  # noqa: E501
        if include_optional :
            return JobAuthStatus(
                required = True, 
                state = '0', 
                job = epic_api.models.job.Job(
                    id = '0', 
                    name = '0', 
                    app = '0', 
                    cost = '0', 
                    submitted_by = '0', 
                    submitted_at = '0', 
                    finished = True, 
                    project = 1, 
                    invoice_reference = '0', ), 
                user_profile = epic_api.models.user_profile.User profile(
                    display_name = '0', ), 
                permissions = '0'
            )
        else :
            return JobAuthStatus(
                state = '0',
        )

    def testJobAuthStatus(self):
        """Test JobAuthStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
