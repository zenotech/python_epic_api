# coding: utf-8

"""
    EPIC API

    REST API for interacting with EPIC (https://epic.zenotech.com) services. <br />                             Used by the EPIC CLI (https://github.com/zenotech/epic-cli).                             Please note this API is in BETA and does not yet contain                             all EPIC functionality.  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@zenotech.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import epiccore
from epiccore.models.batch_queue_details import BatchQueueDetails  # noqa: E501
from epiccore.rest import ApiException

class TestBatchQueueDetails(unittest.TestCase):
    """BatchQueueDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test BatchQueueDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = epiccore.models.batch_queue_details.BatchQueueDetails()  # noqa: E501
        if include_optional :
            return BatchQueueDetails(
                id = 56, 
                display_name = '0', 
                display_description = '0', 
                max_runtime = 0, 
                max_allocation = 0, 
                reported_avail_tasks = 0, 
                reported_max_tasks = 0, 
                sla = epiccore.models.sla.SLA(
                    name = '0', 
                    description = '0', ), 
                maintenance_mode = True, 
                resource_config = '0'
            )
        else :
            return BatchQueueDetails(
                sla = epiccore.models.sla.SLA(
                    name = '0', 
                    description = '0', ),
        )

    def testBatchQueueDetails(self):
        """Test BatchQueueDetails"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
