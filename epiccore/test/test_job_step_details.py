# coding: utf-8

"""
    EPIC API

    REST API for interacting with EPIC (https://epic.zenotech.com) services. <br />                             Used by the EPIC CLI (https://github.com/zenotech/epic-cli).                             Please note this API is in BETA and does not yet contain                             all EPIC functionality.  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@zenotech.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import epiccore
from epiccore.models.job_step_details import JobStepDetails  # noqa: E501
from epiccore.rest import ApiException

class TestJobStepDetails(unittest.TestCase):
    """JobStepDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobStepDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = epiccore.models.job_step_details.JobStepDetails()  # noqa: E501
        if include_optional :
            return JobStepDetails(
                id = 56, 
                instance = 56, 
                run_if_previous_step_fails = True, 
                step_name = '0', 
                node_count = 1, 
                num_tasks = 1, 
                tasks_per_node = 1, 
                threads_per_task = 1, 
                max_runtime = 1, 
                status = '0', 
                exit_code = -2147483648, 
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                wallclock = 1.337, 
                logs = epiccore.models.job_log.JobLog(
                    stdout = '0', 
                    stderr = '0', 
                    app = '0', 
                    last_update = '0', )
            )
        else :
            return JobStepDetails(
                instance = 56,
                step_name = '0',
        )

    def testJobStepDetails(self):
        """Test JobStepDetails"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
